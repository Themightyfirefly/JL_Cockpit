var documenterSearchIndex = {"docs":
[{"location":"getting_started/#Getting-started","page":"Getting Started","title":"Getting started","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"An example workflow can be found in jlcockpit/example/trainingprocess.jl.","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"The jl_cockpit module provides plots for the live visualisation for neural network training. It uses the GLMakie module and their Observable to provide the live functionality. Using the module can happen in two different ways:","category":"page"},{"location":"getting_started/#Selecting-Plots-one-by-one","page":"Getting Started","title":"Selecting Plots one by one","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"ToDO()","category":"page"},{"location":"getting_started/#Creating-Observables-and-passing-them-to-the-visualiser","page":"Getting Started","title":"Creating Observables and passing them to the visualiser","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Right now, only the loss function visualisation is fully operational.","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"First, initialise an Observable","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"losses = Observable{Vector{Float32}}([])","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Once the Observables have been initialised, the visualiser can be initialised","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"cockpit_visualiser(vis_loss=losses)","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Inside the training loop, values can be pushed to the Vector via push!()","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"push!(losses, loss)","category":"page"},{"location":"#jl_cockpit","page":"Home","title":"jl_cockpit","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for jl_cockpit.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#jl_cockpit.cockpit_visualiser-Tuple{}","page":"Home","title":"jl_cockpit.cockpit_visualiser","text":"cockpit_visualiser(; vis_loss::Observable{Vector{Float32}} = nothing, vis_grad_norm::Observable{Vector{Float32}} = nothing)\n\nInitialises the visualiser. It will take the given Observables and display a plot that updates live. \n\n\n\n\n\n","category":"method"}]
}
