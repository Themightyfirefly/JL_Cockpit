var documenterSearchIndex = {"docs":
[{"location":"getting_started/#Getting-started","page":"Getting Started","title":"Getting started","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"We have created a package to provide a modular monitoring and debugging pipeline for training neural networks, implementing a modular training loop using Flux.jl. This package allows users to specify observable quantities (e.g. gradient norm, curvature). Users can see the live dashboard that we implemented with Makie.jl.","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"The jl_cockpit module provides plots for the live visualisation for neural network training. It uses the GLMakie module and their Observable to provide the live functionality. Using the module can happen in two different ways:","category":"page"},{"location":"getting_started/#Example-Workflow","page":"Getting Started","title":"Example Workflow","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"After entering the REPL session on your command line with      julia then enter ] to enter PKg mode","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"activate a temporary environment by entering ","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"activate --temp","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"then add the repo ","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"add https://github.com/Themightyfirefly/jl_cockpit","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"after that you can run the training_loop function","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"training_loop()","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"with default values","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"otherwise you can add your own values","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"training_loop(; model = nothing, dataset_train = nothing, dataset_test = nothing, batchsize = 128, epochs = 5, optim = nothing)","category":"page"},{"location":"getting_started/#Selecting-Plots-one-by-one","page":"Getting Started","title":"Selecting Plots one by one","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"ToDO()","category":"page"},{"location":"getting_started/#Creating-Observables-and-passing-them-to-the-visualiser","page":"Getting Started","title":"Creating Observables and passing them to the visualiser","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Right now, only the loss function visualisation is fully operational.","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"First, initialise an Observable","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"losses = Observable{Vector{Float32}}([])","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Once the Observables have been initialised, the visualiser can be initialised","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"cockpit_visualiser(vis_loss=losses)","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Inside the training loop, values can be pushed to the Vector via push!()","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"push!(losses, loss)","category":"page"},{"location":"#jl_cockpit","page":"Home","title":"jl_cockpit","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for jl_cockpit.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#jl_cockpit.visualiser-Tuple{}","page":"Home","title":"jl_cockpit.visualiser","text":"visualiser(; vis_loss::Observable{Vector{Float32}} = nothing, vis_grad_norm::Observable{Vector{Float32}} = nothing)\n\nInitialises the visualiser. It will take the given Observables and display a plot that updates live. \n\n\n\n\n\n","category":"method"},{"location":"#Base.push!-Tuple{Observables.Observable{Vector{jl_cockpit.Datapoint}}, jl_cockpit.Datapoint}","page":"Home","title":"Base.push!","text":"This function updates Observable with datapoint\n\n\n\n\n\n","category":"method"},{"location":"#Base.push!-Union{Tuple{T}, Tuple{Observables.Observable{Vector{T}}, T}} where T<:Real","page":"Home","title":"Base.push!","text":"This function updates list of Observables with specific value of FLoat32\n\n\n\n\n\n","category":"method"},{"location":"#jl_cockpit.accuracy-Tuple{Any, Any, Any}","page":"Home","title":"jl_cockpit.accuracy","text":"This function calculates the accuracy of the model on test data\n\n\n\n\n\n","category":"method"},{"location":"#jl_cockpit.loss_plot!-Tuple{Any, Observables.Observable{Vector{jl_cockpit.Datapoint}}}","page":"Home","title":"jl_cockpit.loss_plot!","text":"This function plots the loss of the plot data and axis\n\n\n\n\n\n","category":"method"},{"location":"#jl_cockpit.preprocess-Tuple{Any}","page":"Home","title":"jl_cockpit.preprocess","text":"This function preprocesses features x and labels y from the given dataset for the training.\nIt transforms x into a 28x28 matrix and y into a 10-class vector.\n\n\n\n\n\n","category":"method"},{"location":"#jl_cockpit.training_loop-Tuple{}","page":"Home","title":"jl_cockpit.training_loop","text":"This function trains the data in a loop\nCall this function with optional parameters\n\n\n\n\n\n","category":"method"}]
}
